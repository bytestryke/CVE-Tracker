import requests
import csv
from datetime import datetime, timedelta
# This product uses the NVD API but is not endorsed or certified by the NVD.
def pull_cve_info():
    today = datetime.now().date()
    yesterday = today - timedelta(days=1)

    response = requests.get(f'https://services.nvd.nist.gov/rest/json/cves/2.0/?pubStartDate={yesterday}T00:00:00.000&pubEndDate={today}T00:00:00.000')

    # Convert the response to a JSON object (dictionary in Python)
    data = response.json()

    #get total number of CVEs per time range
    total_cves = data['totalResults']

    def get_cve_data(cve_data, cvss_v31_data, cve_description, index_value):
        result = []
        result.append(str(index_value))
        result.append(cve_data['id'])
        result.append(cve_data['sourceIdentifier'])
        result.append(cve_data['published'])
        result.append(cve_data['lastModified'])
        result.append(cve_data['vulnStatus'])
        if cvss_v31_data is not None:
            result.append(cvss_v31_data['vectorString'])
        else:
            result.append("No CVSS v3.1 data available.")
        result.append(cve_description.replace('\n', ' '))  # replace newlines with space
        return result

    with open('CVEs.csv', 'w', newline='') as f:
        writer = csv.writer(f, quotechar='"', quoting=csv.QUOTE_MINIMAL)
        writer.writerow(["Index", "CVE ID", "Source Identifier", "Published Date", "Last Modified", "Vuln Status", "CVSS v3.1 Vector String", "CVE Description"])
        for index_value in range(total_cves):
            cve_data = data['vulnerabilities'][index_value]['cve']
            cve_description = cve_data['descriptions'][0]['value']
            if 'cvssMetricV31' in cve_data['metrics']:
                cvss_v31_data = cve_data['metrics']['cvssMetricV31'][0]['cvssData']
            else:
                cvss_v31_data = None

            writer.writerow(get_cve_data(cve_data, cvss_v31_data, cve_description, index_value))